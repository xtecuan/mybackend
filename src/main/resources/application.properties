###http server config
quarkus.http.cors=true
quarkus.http.ssl-port=8443
quarkus.servlet.context-path=/mybackend
quarkus.resteasy.path=/resources
quarkus.http.insecure-requests=disabled

###Banner
quarkus.banner.enabled=true
quarkus.banner.path=banner/mybackend-banner.txt

###DEV ENVIROMENT SETTINGS
###Keystore Desa
%dev.quarkus.http.ssl.certificate.key-store-file=META-INF/resources/mykeystore.jks
%dev.quarkus.http.ssl.certificate.key-store-file-type=JKS
%dev.quarkus.http.ssl.certificate.key-store-password=secret

###DataSource Desa
dev.db.host=localhost
dev.db.port=5432
dev.db.name=sample
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=sample
%dev.quarkus.datasource.password=Welcome123\$
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://${dev.db.host}:${dev.db.port}/${dev.db.name}

###Logger
%dev.quarkus.log.level=INFO


#Containers config
%kubernetes.quarkus.container-image.builder=docker
%kubernetes.quarkus.container-image.registry=iad.ocir.io
%kubernetes.quarkus.container-image.group=idi7hukj6eay/revfarepo

#Kubernetes config
%kubernetes.quarkus.kubernetes-config.namespace=default
%kubernetes.quarkus.kubernetes-config.enabled=true
%kubernetes.quarkus.kubernetes-config.secrets.enabled=true
%kubernetes.quarkus.kubernetes-config.secrets=mybackend-postgres-secret
%kubernetes.quarkus.kubernetes.image-pull-secrets=xtecuansecret
#LoadBalancer = For Webapps and NodePort = For APIs (Use LoadBalancer for Tests)
%kubernetes.quarkus.kubernetes.service-type=NodePort

#Environment kubernetes
%kubernetes.quarkus.kubernetes.env.mapping.POSTGRES_USER.from-configmap=mybackend-config
%kubernetes.quarkus.kubernetes.env.mapping.POSTGRES_USER.with-key=POSTGRES_USER
%kubernetes.quarkus.kubernetes.env.mapping.POSTGRES_PASSWORD.from-configmap=mybackend-config
%kubernetes.quarkus.kubernetes.env.mapping.POSTGRES_PASSWORD.with-key=POSTGRES_PASSWORD
%kubernetes.quarkus.kubernetes.env.mapping.POSTGRES_HOST.from-configmap=mybackend-config
%kubernetes.quarkus.kubernetes.env.mapping.POSTGRES_HOST.with-key=POSTGRES_HOST
%kubernetes.quarkus.kubernetes.env.mapping.POSTGRES_DB.from-configmap=mybackend-config
%kubernetes.quarkus.kubernetes.env.mapping.POSTGRES_DB.with-key=POSTGRES_DB
%kubernetes.quarkus.kubernetes.env.mapping.KEYCLOAK_HOST.from-configmap=mybackend-config
%kubernetes.quarkus.kubernetes.env.mapping.KEYCLOAK_HOST.with-key=KEYCLOAK_HOST
%kubernetes.quarkus.kubernetes.env.mapping.KEYCLOAK_PORT.from-configmap=mybackend-config
%kubernetes.quarkus.kubernetes.env.mapping.KEYCLOAK_PORT.with-key=KEYCLOAK_PORT
%kubernetes.quarkus.kubernetes.env.mapping.KEYSTORE_FILE.from-configmap=mybackend-config
%kubernetes.quarkus.kubernetes.env.mapping.KEYSTORE_FILE.with-key=KEYSTORE_FILE
%kubernetes.quarkus.kubernetes.env.mapping.KEYSTORE_TYPE.from-configmap=mybackend-config
%kubernetes.quarkus.kubernetes.env.mapping.KEYSTORE_TYPE.with-key=KEYSTORE_TYPE
%kubernetes.quarkus.kubernetes.env.mapping.KEYSTORE_PASS.from-configmap=mybackend-config
%kubernetes.quarkus.kubernetes.env.mapping.KEYSTORE_PASS.with-key=KEYSTORE_PASS


###Kubernetes ENVIROMENT SETTINGS
###Keystore
%kubernetes.quarkus.http.ssl.certificate.key-store-file=${KEYSTORE_FILE}
%kubernetes.quarkus.http.ssl.certificate.key-store-file-type=${KEYSTORE_TYPE}
%kubernetes.quarkus.http.ssl.certificate.key-store-password=${KEYSTORE_PASS}

#DataSource Production/or to deploy on Kubernetes
%kubernetes.quarkus.datasource.db-kind=postgresql
%kubernetes.quarkus.datasource.username=${POSTGRES_USER}
%kubernetes.quarkus.datasource.password=${POSTGRES_PASSWORD}
%kubernetes.quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}

###Logger
%kubernetes.quarkus.log.level=INFO